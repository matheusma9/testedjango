# Generated by Django 3.0.2 on 2020-01-24 13:55

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvaliacaoProduto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('rating', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rating')),
                ('comentario', models.TextField(blank=True, null=True, verbose_name='Comentário')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_produto', to='accounts.Cliente')),
            ],
            options={
                'verbose_name': 'Avaliação do Produto',
                'verbose_name_plural': 'Avaliações dos Produtos',
            },
        ),
        migrations.CreateModel(
            name='Carrinho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('valor_total', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Valor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('slug', models.SlugField(unique=True)),
                ('qtd_acessos', models.PositiveIntegerField(default=0, verbose_name='Quantidade de acessos')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('bairro', models.CharField(max_length=50, verbose_name='Bairro')),
                ('rua', models.CharField(max_length=50, verbose_name='Rua')),
                ('numero_casa', models.PositiveIntegerField(verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=50, null=True, verbose_name='Complemento')),
                ('cep', models.CharField(max_length=10, verbose_name='CEP')),
                ('cidade', models.CharField(max_length=120, verbose_name='Cidade')),
                ('uf', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RR', 'Roraima'), ('RO', 'Rondônia'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], default='AC', max_length=2, verbose_name='UF')),
            ],
            options={
                'verbose_name': 'Endereço',
                'verbose_name_plural': 'Endereços',
                'ordering': ['cep'],
            },
        ),
        migrations.CreateModel(
            name='ItemVenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('quantidade', models.PositiveIntegerField(verbose_name='Quantidade')),
            ],
            options={
                'verbose_name': 'Item da venda',
                'verbose_name_plural': 'Itens das vendas',
                'ordering': ['-update_at'],
            },
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('descricao', models.CharField(max_length=100, verbose_name='Descrição')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('qtd_estoque', models.PositiveIntegerField(verbose_name='Quantidade em estoque')),
                ('qtd_limite', models.PositiveIntegerField(default=100, verbose_name='Quantidade limite')),
                ('descricao_completa', models.TextField(blank=True, null=True, verbose_name='Descrição Completa')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='website/images', verbose_name='Imagem')),
                ('avaliacoes', models.ManyToManyField(through='website.AvaliacaoProduto', to='accounts.Cliente')),
                ('categorias', models.ManyToManyField(related_name='produtos', to='website.Categoria')),
            ],
            options={
                'verbose_name': 'Produto',
                'verbose_name_plural': 'Produtos',
                'ordering': ['descricao'],
            },
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('valor_total', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Valor')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendas', to='accounts.Cliente', verbose_name='Cliente')),
                ('endereco_entrega', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendas', to='website.Endereco')),
                ('produtos', models.ManyToManyField(related_name='vendas', through='website.ItemVenda', to='website.Produto')),
            ],
            options={
                'verbose_name': 'Venda',
                'verbose_name_plural': 'Vendas',
                'ordering': ['-update_at'],
            },
        ),
        migrations.CreateModel(
            name='Oferta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='website/images/ofertas', verbose_name='Foto')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('validade', models.DateTimeField(verbose_name='Validade')),
                ('is_banner', models.BooleanField(verbose_name='É banner?')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ofertas', to=settings.AUTH_USER_MODEL)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ofertas', to='website.Produto')),
            ],
            options={
                'ordering': ['-validade'],
            },
        ),
        migrations.AddField(
            model_name='itemvenda',
            name='produto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_vendas', to='website.Produto'),
        ),
        migrations.AddField(
            model_name='itemvenda',
            name='venda',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='website.Venda'),
        ),
        migrations.CreateModel(
            name='ItemCarrinho',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='Valor')),
                ('quantidade', models.PositiveIntegerField(null=True, verbose_name='Quantidade')),
                ('carrinho', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_carrinho', to='website.Carrinho')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens_carrinhos', to='website.Produto')),
            ],
            options={
                'verbose_name': 'Item do carrinho',
                'verbose_name_plural': 'Itens dos carrinhos',
                'ordering': ['-update_at'],
                'unique_together': {('carrinho', 'produto')},
            },
        ),
        migrations.CreateModel(
            name='ImagemProduto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('update_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='website/images', verbose_name='Imagem')),
                ('capa', models.BooleanField(blank=True, default=False, verbose_name='É capa?')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagens', to='website.Produto')),
            ],
            options={
                'verbose_name': 'Imagem do Produtos',
                'verbose_name_plural': 'Imagens dos Produtos',
            },
        ),
        migrations.AddField(
            model_name='carrinho',
            name='itens',
            field=models.ManyToManyField(through='website.ItemCarrinho', to='website.Produto'),
        ),
        migrations.AddField(
            model_name='avaliacaoproduto',
            name='produto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes_produto', to='website.Produto'),
        ),
        migrations.AlterUniqueTogether(
            name='avaliacaoproduto',
            unique_together={('cliente', 'produto')},
        ),
    ]
